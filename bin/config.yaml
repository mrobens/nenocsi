#####################################################################################
# Noxim - the NoC Simulator
#
# Copyright (C) 2005-2018 by the University of Catania
# For the complete list of authors refer to file ../doc/AUTHORS.txt
# For the license applied to these sources refer to file ../doc/LICENSE.txt
#
#************************************************************************************
# Downloaded March 23, 2022 from
# https://github.com/davidepatti/noxim/tree/c52ebce2217e57bcd4ff11a97b400323bd00acd5
#************************************************************************************
#
# NENoCSi: Patched version of Noxim to process traffic generated by NEST
# Modifications Copyright (C) 2022-2023 Forschungszentrum Juelich GmbH, ZEA-2
# Author: Markus Robens <https://www.fz-juelich.de/profile/robens_m>
# For the license applied to these modifications and NENoCSi as a whole
# refer to file ../doc/LICENSE_NENOCSI.txt
#  
# 2022-10-18: Additions have been made to account for different casting types,
#             the torus topology as well as traffic generated by NEST.
#
#####################################################################################
#
# This is the main configuration file used by NENoCSi in order to set up
# global variables for the simulation.
#
# In particular, this configuration is used to steer a NoC simulation by input
# from the NEST Microcircuit model (scaled down to 10%) with 256 neurons per
# node resulting in a 6x6 mesh
#
# Each parameter is overridden when a corresponding command line value is set
#
# NOC & WIRED CONFIGURATION
#
# Topologies:
#   MESH
#   TORUS
#   BUTTERFLY
#   BASELINE
#   OMEGA
#
#   BUTTERFLY, BASELINE, and OMEGA are Delta Network topologies
topology: MESH
# X and Y mesh sizes
mesh_dim_x: 6
mesh_dim_y: 6
# number of flits for each router buffer
buffer_depth: 8
# size of flits, in bits
flit_size: 32
# lenght in mm of router to hub connection
r2h_link_length: 2.0
# lenght in mm of router to router connection
r2r_link_length: 1.0
n_virtual_channels: 4

# Routing algorithms:
#   XY
#   XY_TORUS
#   DELTA
#   WEST_FIRST
#   NORTH_LAST
#   NEGATIVE_FIRST
#   ODD_EVEN
#   DYAD
#   TABLE_BASED
# Each of the above labels should match a corresponding
# implementation in the routingAlgorithms source code directory
routing_algorithm: XY
routing_table_filename: ""

# Routing specific parameters
#   dyad_threshold: double
dyad_threshold: 0.6

# Selection Strategies:
#   RANDOM
#   BUFFER_LEVEL
#   NOP
# Each of the above labels should match a corresponding
# implementation in the selectionStrategies source code directory
selection_strategy: RANDOM

# Casting type
# UC
# LMC
# Casting types are unicast (UC) and local multicast (LMC)
casting_type: UC

#
# WIRELESS CONFIGURATION
#
Hubs:
    defaults:
    # channels from which Hub can receive/transmit
        rx_radio_channels: []
        tx_radio_channels: []
    # list of node tiles attached to the hub
        attached_nodes: []
    # size of buffers connecting the hub to tiles
        to_tile_buffer_size: 4
        from_tile_buffer_size: 4
    # size of antenna tx/rx
        rx_buffer_size: 4
        tx_buffer_size: 4

# For each hub, the same parameters specified above can be customized.
# If not specified, the above default values will be used.
# What is usually needed to be customized specifically for each hub is
# the set of nodes that are connected to it. In this simple topology
# we have no hubs connected to sub-meshes.

#    0:
#      attached_nodes: [0,1,2,6,7,8,12,13,14]
#    1:
#      attached_nodes: [3,4,5,9,10,11,15,16,17]
#    2:
#      attached_nodes: [18,19,20,24,25,26,30,31,32]
#    3:
#      attached_nodes: [21,22,23,27,28,29,33,34,35]

# Transmission channels configuration
# Each channel modelizes the transmission over a given frequency that
# can be used by a set of communicating hubs.
RadioChannels:
    defaults:
    # data rate in Gb/s affect the number of cycles required for a
    # flit transmission
        data_rate: 16
    # bit error rate (CURRENTLY UNSUPPORTED)
        ber: [0, 0]
    # mac policies:

    # who has the token releas only when a complete packet has
    # been sent
        #[TOKEN_PACKET]

    # who has the token, release only after a fixed number of
    # cycles, even no transmission is occurring
        #[TOKEN_HOLD, num_hold_cycles]

    # who has the token, holds the packet until needed for
    # transmissions, until a max number of cycles is reached
        #[TOKEN_MAX_HOLD, max_hold_cycles]
        mac_policy: [TOKEN_PACKET]


# SIMULATION PARAMETERS
#
clock_period_ps: 1000
# duration of reset signal assertion, expressed in cycles
reset_time: 1000
# overal simulation lenght, expressed in cycles
simulation_time: 1400000000
# collect stats after a given number of cycles
stats_warm_up_time: 0
# power breakdown, nodes communication details
detailed: false
# stop after a given amount of load has been processed
max_volume_to_be_drained: 0
show_buffer_stats: false

# Winoc
# enable wireless, when false, all wireless channel configuration is
# ignored
use_winoc: false
# experimental power saving strategy
use_wirxsleep: false

# Verbosity level:
#   VERBOSE_OFF
#   VERBOSE_LOW
#   VERBOSE_MEDIUM
#   VERBOSE_HIGH
verbose_mode: VERBOSE_OFF

# Trace
trace_mode: false
trace_filename: "Nest_MicroCirc_256_npn"

min_packet_size: 1
max_packet_size: 1
packet_injection_rate: 0.01
probability_of_retransmission: 0.01

# Traffic distribution:
#   TRAFFIC_RANDOM
#   TRAFFIC_TRANSPOSE1
#   TRAFFIC_TRANSPOSE2
#   TRAFFIC_HOTSPOT
#   TRAFFIC_TABLE_BASED
#   TRAFFIC_BIT_REVERSAL
#   TRAFFIC_SHUFFLE
#   TRAFFIC_BUTTERFLY
#   TRAFFIC_NEST_TRACE
traffic_distribution: TRAFFIC_NEST_TRACE
# when traffic table based is specified, use the following
# configuration file
traffic_table_filename: "t.txt"

# NEST-NENoCSi CO-SIMULATION PARAMETERS
#
# Configuration file used when TRAFFIC_NEST_TRACE is specified for
# GlobalParams::traffic_distribution
nest_input_filename: "../nest_inputs/data/Nest_MicroCirc_SpkTimes_NpN_256.yaml"
# Multiplier used to convert NEST time stamps to NENoCSi time stamps
nest_time_multiplier: 1e9